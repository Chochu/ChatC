/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import java.awt.CardLayout;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.HashMap;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListModel;

/**
 *
 * @author Chochu
 */
public class ClientGUI{

	/**
	 * Creates new form ClientGUI
	 * @throws UnknownHostException 
	 */
	public ClientGUI() throws UnknownHostException {
		initComponents();
	}
	void initRoomPane(){
		Tab = new javax.swing.JTabbedPane(); //tab, main pane (display room, etc)
		Main_ScrollPane = new javax.swing.JScrollPane(); //
		Room_Jlist = new javax.swing.JList<>();
		
		HashMap<Integer, String> getSR = clientnet.GetChatRooms();//get open room from the server
		getServerRoom = new HashMap<Integer, String>();
		//for (HashMap<Integer, String> k : getSR) {
		//	
		//}
		//getServerRoom.put(0, "Room 1");
		final String[] openRoom = new String[getServerRoom.size()];
		int counter = 0;
		for(int key: getServerRoom.keySet()){
			openRoom[counter] = getServerRoom.get(key); 
		}
		Room_Jlist.setModel(new javax.swing.AbstractListModel<String>() {
			String[] strings = openRoom;
			/*
			 * 			public int getSize() { return strings.size(); }
			 *			public String getElementAt(int i) { return strings[i]; }
			 */
			public int getSize() { return strings.length; }
			public String getElementAt(int i) { return strings[i]; }
		});
		Room_Jlist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
		Room_Jlist.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				Room_JlistMouseClicked(evt);
			}
		});
		Main_ScrollPane.setViewportView(Room_Jlist);

		Tab.addTab("Main", Main_ScrollPane);
		
        Tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMouseClicked(evt);
            }
        });
        
		panelCont.add(Tab, "2");
		cl.show(panelCont, "2");
		//		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		//		getContentPane().setLayout(layout);
		//		layout.setHorizontalGroup(
		//				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		//				.addComponent(Tab)
		//				);
		//		layout.setVerticalGroup(
		//				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		//				.addGroup(layout.createSequentialGroup()
		//						.addComponent(Tab, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
		//						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		//				);
		//
		//		pack();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 * @throws UnknownHostException 
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() throws UnknownHostException {
		String ipAddress = JOptionPane.showInputDialog(frame, "Enter Server IP:").toString();
		clientnet = new ClientNet(InetAddress.getByName(ipAddress));
		frame = new JFrame("ChatC"); //Main Frame
		panelCont = new JPanel(); //control Panel
		loginPane = new LoginPane(clientnet); //Login Panel	
		cl = new CardLayout(); //cardlayout object
		
		panelCont.setLayout(cl);

		panelCont.add(loginPane,"1");
		cl.show(panelCont, "1");

		frame.add(panelCont);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
//		frame.addWindowListener(new WindowAdapter() {
//			public void windowClosing(WindowEvent e){
//				clientnet.CloseConnection();
//			}
//		});
		frame.setSize(800,600);
		frame.setVisible(true);
	}// </editor-fold>                        
	
	protected void TabMouseClicked(MouseEvent evt) {
		// remove tab when double click
		if(evt.getClickCount() == 2){
			int index = Tab.getSelectedIndex(); //get index
			Tab.removeTabAt(index); //close tab at index
			clientnet.LeaveChatRoom(getRoomIDbyName(Tab.getTitleAt(index))); //send to server to close tab with room name
		}
	}

	private void Room_JlistMouseClicked(java.awt.event.MouseEvent evt) {    // created room                                     
		// Open a new tab
		if(evt.getClickCount() == 2){
			int index = Room_Jlist.locationToIndex(evt.getPoint());
			
			ListModel dlm = Room_Jlist.getModel();
			Object item = dlm.getElementAt(index);;
			Room_Jlist.ensureIndexIsVisible(index);
			System.out.println(getRoomIDbyName(""+item));
			Tab.addTab(""+item, new ChatTabPane(clientnet,getRoomIDbyName(""+item)));
			clientnet.JoinChatRoom(getRoomIDbyName(""+item)); //send to server that the user has join the room name
			/*
			 * create thread and listen to port
			 */
		}
	}  
	public int getRoomIDbyName(String str){
		if(getServerRoom.containsValue(str)){
			for(int key:getServerRoom.keySet()){
				
				
//				System.out.println(getServerRoom.get(key) + " " + str + " " + key);
				
				
				if(getServerRoom.get(key).equals(str)){
					
					return key;
				}
			}
		}
		return -1;
	}
	/**
	 * @param args the command lin e arguments
	 * @throws UnknownHostException 
	 */
	public static void main(String args[]) throws UnknownHostException {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		ClientGUI client = new ClientGUI();
//		client.initRoomPane();
		Runnable r = new LoginThread(client,clientnet);
		Thread th = new Thread(r);
		th.start();
//		if(!th.isAlive()){
//			client.initRoomPane();
//		}
		//		/* Create and display the form */
		//		java.awt.EventQueue.invokeLater(new Runnable() {
		//			public void run() {
		//				
		////				client.setVisible(true);
		////				client.setSize(800,600);
		//			}
		//		});
	}

	// Variables declaration - do not modify   
	HashMap<Integer,String> getServerRoom;
	CardLayout cl;
	JPanel panelCont;
	LoginPane loginPane;
	private JFrame frame;
	private javax.swing.JScrollPane Main_ScrollPane;
	private javax.swing.JList<String> Room_Jlist;
	private javax.swing.JTabbedPane Tab;
	private static ClientNet clientnet;
	// End of variables declaration                   

}
